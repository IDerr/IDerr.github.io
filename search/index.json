[{"content":"Introduction Today, we will discuss how to use Tutor for deploying OpenEdx. OpenEdx is a platform used to deploy your courses online, it\u0026rsquo;s an Udemy like but self hosted.\nTutor is an amazing tool to get it deployed with Docker (or Kubernetes).\nInstallation Tutor installation Installation is really straightforward, a simple binary to download and you\u0026rsquo;re done !\nsudo curl -L \u0026#34;https://github.com/overhangio/tutor/releases/download/v12.1.6/tutor-$(uname -s)_$(uname -m)\u0026#34; -o /usr/local/bin/tutor sudo chmod 0755 /usr/local/bin/tutor Shamefully copied/pasted from the documentation\nReally simple, no ?\nRun your environnement Now that we have Tutor installed in our environnement, we can launch our platform with the following command\ntutor local quickstart\rYou\u0026rsquo;ll be asked some questions to change some variables :\n Is it a production platform ? Our instance name Our contact email  For this tutorial, I\u0026rsquo;ll run a non production openedx.\niderr@iderr-VirtualBox:~$ tutor local quickstart ================================================== Interactive platform configuration ================================================== Are you configuring a production platform? Type \u0026#39;n\u0026#39; if you are just testing Tutor on your local computer [Y/n] n As you are not running this platform in production, we automatically set the following configuration values: LMS_HOST = local.overhang.io CMS_HOST = studio.local.overhang.io ENABLE_HTTPS = False Your platform name/title [My Open edX] platform1 Your public contact email address [contact@local.overhang.io] The default language code for the platform [en] Configuration saved to /home/iderr/.local/share/tutor/config.yml Environment generated in /home/iderr/.local/share/tutor/env We let tutor do its job, and your environnement will be ready after seeing a text message like this\nAll services initialised.\rThe Open edX platform is now running in detached mode\rYour Open edX platform is ready and can be accessed at the following urls:\rhttp://local.overhang.io\rhttp://studio.local.overhang.io\rFor our test, I\u0026rsquo;ll stick with defaults urls, of course, you can use yours. I\u0026rsquo;ll modify my /etc/hosts file to redirect urls in my localhost environnement\n127.0.0.1\tlocalhost local.overhang.io studio.local.overhang.io\rTADA  Success \nConclusion Congratulations, now, we have a running OpenEdx installation ! See you next time for the configuration of OpenEdx and its customisation !\n","date":"2021-11-07T00:00:00Z","image":"https://iderr.github.io/p/introduction-to-tutor/background_hu4902f2b049033e1a8195559260a8ee86_735658_120x120_fill_box_smart1_3.png","permalink":"https://iderr.github.io/p/introduction-to-tutor/","title":"Introduction to Tutor"},{"content":"Introduction First article of this new blog!\nToday we will discuss how to configure automatic Letâ€™s-Encrypt certificate renewal with a domain hosted in OVH.\nI have not found a clear tutorial on how to setup a cluster wide OVH cert-manager provider so there it is.\nInstallation Cert-manager installation Quick reminder, installing cert-manager is pretty straightforward with Helm. Don\u0026rsquo;t forget to replace the version with the latest one : https://github.com/jetstack/cert-manager/releases\nkubectl create namespace cert-manager helm repo add jetstack https://charts.jetstack.io helm repo update helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.5.3 --set installCRDs=true After that, you should have a running cert-manager.\nOVH Webhook installation git clone https://github.com/baarde/cert-manager-webhook-ovh.git cd cert-manager-webhook-ovh helm install cert-manager-webhook-ovh ./deploy/cert-manager-webhook-ovh --set groupName=\u0026#39;\u0026lt;GROUP_NAME\u0026gt;\u0026#39; After that, we need to create our api keys in the OVH API to connect our webhook controller to OVH\n Go to https://api.ovh.com/createToken/index.cgi Add the followings rights, if you want to give acces to all of your domains  GET /domain/zone/* PUT /domain/zone/* POST /domain/zone/* DELETE /domain/zone/*   If you prefer to give access only to one domain replace the \u0026ldquo;*\u0026rdquo; by your domain name  We will store the freshly generated application secret in Kubernetes.\nThe secret needs to be in the same namespace as the cert-manager controller pod if you want to create a ClusterIssuer, in our case, \u0026lsquo;cert-manager\u0026rsquo;\nkubectl create secret generic ovh-credentials --namespace cert-manager --from-literal=applicationSecret=\u0026#39;\u0026lt;OVHSECRET\u0026gt;\u0026#39; Grant permission to get the secret to the cert-manager-webhook-ovh service account\napiVersion:rbac.authorization.k8s.io/v1kind:ClusterRolemetadata:name:cert-manager-webhook-ovh:secret-readerrules:- apiGroups:[\u0026#34;\u0026#34;]resources:[\u0026#34;secrets\u0026#34;]resourceNames:[\u0026#34;ovh-credentials\u0026#34;]verbs:[\u0026#34;get\u0026#34;,\u0026#34;watch\u0026#34;]---apiVersion:rbac.authorization.k8s.io/v1kind:ClusterRoleBindingmetadata:name:cert-manager-webhook-ovh:secret-readerroleRef:apiGroup:rbac.authorization.k8s.iokind:ClusterRolename:cert-manager-webhook-ovh:secret-readersubjects:- apiGroup:\u0026#34;\u0026#34;namespace:defaultkind:ServiceAccountname:cert-manager-webhook-ovhAnd we can finally create our cluster issuer, don\u0026rsquo;t forget to replace the values between \u0026lt;\u0026gt; with your keys/config\napiVersion:cert-manager.io/v1kind:ClusterIssuermetadata:name:letsencryptnamespace:cert-managerspec:acme:server:https://acme-v02.api.letsencrypt.org/directoryemail:\u0026#39;\u0026lt;EMAIL\u0026gt;\u0026#39;privateKeySecretRef:name:letsencrypt-account-keysolvers:- dns01:webhook:groupName:\u0026#39;\u0026lt;GROUP_NAME\u0026gt;\u0026#39;solverName:ovhconfig:endpoint:ovh-euapplicationKey:\u0026#39;\u0026lt;APP_KEY\u0026gt;\u0026#39;applicationSecretRef:key:applicationSecretname:ovh-credentialsconsumerKey:\u0026#39;\u0026lt;CONSUMER_KEY\u0026gt;\u0026#39;And voila, you have a fully working ClusterIssuer with OVH, you can test all your work with a new Certificate.\napiVersion:cert-manager.io/v1kind:Certificatemetadata:name:example-certificatespec:dnsNames:- test.mydomain.comissuerRef:name:letsencryptkind:ClusterIssuersecretName:test-mydomain-com-tlsNAME READY SECRET AGE example-certificate True test-mydomain-com-tls 3s Conclusion Congratulations, and see you next time for another article!\n","date":"2021-08-27T00:00:00Z","image":"https://cdna.artstation.com/p/assets/images/images/009/211/358/large/bala-vidhya-sagar-1.jpg?1517728575","permalink":"https://iderr.github.io/p/ovh-provider-for-cert-manager-dns-01/","title":"OVH provider for cert-manager DNS-01"}]