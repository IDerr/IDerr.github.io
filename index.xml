<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IDerr</title><link>https://iderr.github.io/</link><description>Recent content on IDerr</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 11 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://iderr.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy your kubernetes as a service using Kubermatic ! Part 2</title><link>https://iderr.github.io/p/deploy-your-kubernetes-as-a-service-using-kubermatic-part-2/</link><pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate><guid>https://iderr.github.io/p/deploy-your-kubernetes-as-a-service-using-kubermatic-part-2/</guid><description>&lt;img src="https://iderr.github.io/p/deploy-your-kubernetes-as-a-service-using-kubermatic-part-2/background.jpg" alt="Featured image of post Deploy your kubernetes as a service using Kubermatic ! Part 2" />&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In the last article, we saw the global architecture of Kubermatic, we will now deploy it on a single kubernetes cluster using Helm, without deploying all the stuff required by Kubermatic team&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>A storage class named kubermatic-fast&lt;/li>
&lt;li>A kubernetes cluster for managing kubermatic and seed clusters&lt;/li>
&lt;/ul></description></item><item><title>Deploy your kubernetes as a service using Kubermatic ! Part 1</title><link>https://iderr.github.io/p/deploy-your-kubernetes-as-a-service-using-kubermatic-part-1/</link><pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate><guid>https://iderr.github.io/p/deploy-your-kubernetes-as-a-service-using-kubermatic-part-1/</guid><description>&lt;img src="https://iderr.github.io/p/deploy-your-kubernetes-as-a-service-using-kubermatic-part-1/background.jpg" alt="Featured image of post Deploy your kubernetes as a service using Kubermatic ! Part 1" />&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Want to build your own EKS, GKE on vanilla Kubernetes ? Here&amp;rsquo;s an easy way to use Kubermatic as your kubernetes provider on your infra.&lt;/p>
&lt;p>Kubermatic will manage all your kubernetes clusters using your favorite hypervisor, with a great multi-tenant UI.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>To make your own Kubernetes as a Service you need :&lt;/p>
&lt;ul>
&lt;li>
&lt;p>At least one kubernetes cluster, will be used to host control plane services and kubermatic software&lt;/p>
&lt;/li>
&lt;li>
&lt;p>At least one infrastructure provider (&lt;a class="link" href="https://github.com/kubermatic/machine-controller" target="_blank" rel="noopener"
>https://github.com/kubermatic/machine-controller&lt;/a>)&lt;/p>
&lt;ul>
&lt;li>AWS&lt;/li>
&lt;li>GCP&lt;/li>
&lt;li>Openstack&lt;/li>
&lt;li>Hetzner&lt;/li>
&lt;li>Kubevirt&lt;/li>
&lt;li>Digitalocean&lt;/li>
&lt;li>Azure&lt;/li>
&lt;li>Nutanix&lt;/li>
&lt;li>VMWare Cloud Director&lt;/li>
&lt;li>VMWare Vsphere&lt;/li>
&lt;li>Linode
Using one of the following operating system (Full compatibility here : &lt;a class="link" href="https://github.com/kubermatic/machine-controller/blob/master/docs/operating-system.md%29" target="_blank" rel="noopener"
>https://github.com/kubermatic/machine-controller/blob/master/docs/operating-system.md)&lt;/a>:&lt;/li>
&lt;li>Ubuntu&lt;/li>
&lt;li>Flatcar&lt;/li>
&lt;li>CentOS 7&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>If you respect all these prerequisites, you are good to go&lt;/p>
&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>Kubermatic has a 3 layer architecture : Master&lt;/p>
&lt;ul>
&lt;li>Master Cluster&lt;/li>
&lt;li>Seed Cluster&lt;/li>
&lt;li>User Cluster&lt;/li>
&lt;/ul>
&lt;p>We will go through each of them to detail their usage&lt;/p>
&lt;h3 id="master-cluster">Master Cluster&lt;/h3>
&lt;p>Master cluster is reponsible for running all kubermatic related software :&lt;/p>
&lt;ul>
&lt;li>Web UI aka Dashboard&lt;/li>
&lt;li>Kubermatic API&lt;/li>
&lt;li>Machine Controller responsible to deploy and manage worker nodes&lt;/li>
&lt;/ul>
&lt;h3 id="seed-cluster">Seed Cluster&lt;/h3>
&lt;p>Seed cluster is reponsible for running all control planes software for user clusters
Each user cluster will use a different namespace in the seed cluster to separate resources from each cluster.&lt;/p>
&lt;h3 id="user-cluster">User Cluster&lt;/h3>
&lt;p>The user cluster is the cluster created for a tenant.&lt;/p>
&lt;h2 id="architecture-1">Architecture&lt;/h2>
&lt;h3 id="simple-architecture">Simple architecture&lt;/h3>
&lt;p>You&amp;rsquo;ll need one kubernetes cluster for this simple architecture, master and seed cluster will be grouped in one cluster.
The user cluster will be instanciated in your provider.&lt;/p>
&lt;p>&lt;figure
>
&lt;a href="https://d33wubrfki0l68.cloudfront.net/24dced1937561af303108d13284e6766df6be253/cd0c4/img/kubermatic/v2.20/architecture/combined-master-seed.png" >
&lt;img src="https://d33wubrfki0l68.cloudfront.net/24dced1937561af303108d13284e6766df6be253/cd0c4/img/kubermatic/v2.20/architecture/combined-master-seed.png"
loading="lazy"
alt="simple">
&lt;/a>
&lt;figcaption>simple&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h3 id="large-scale-architecture">Large scale architecture&lt;/h3>
&lt;p>You&amp;rsquo;ll need at least two kubernetes clusters for this.
Master will be hosted in a cluster and the seed cluster in another. You can separate your clusters in multiple seeds depending on the granularity needed (Country/Datacenter or other)&lt;/p>
&lt;p>The user cluster will still be instanciated in your provider.&lt;/p>
&lt;p>&lt;figure
>
&lt;a href="https://d33wubrfki0l68.cloudfront.net/3c0b0b49415d5ece57c75e678ca15ac8edd8cea8/e39bb/img/kubermatic/v2.20/architecture/dedicated-seeds.png" >
&lt;img src="https://d33wubrfki0l68.cloudfront.net/3c0b0b49415d5ece57c75e678ca15ac8edd8cea8/e39bb/img/kubermatic/v2.20/architecture/dedicated-seeds.png"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Now that you know the architecture of Kubermatic, we&amp;rsquo;ll install it on a kubernetes cluster linked to an openstack cluster !&lt;/p>
&lt;p>See you on the next article !&lt;/p></description></item><item><title>Week 2 - Using Hasura to analyze OpenFoodFacts</title><link>https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/</link><pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate><guid>https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/</guid><description>&lt;img src="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/background.png" alt="Featured image of post Week 2 - Using Hasura to analyze OpenFoodFacts" />&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In the last article, we have imported OpenFoodFacts data from a CSV format to PostgreSQL.&lt;/p>
&lt;p>Now, our data is ready to be analysed by anyone.
SQL can be great for analysis but if we want to build an application, we&amp;rsquo;ll need another transport layer like REST or GraphQL.
So in this article, I&amp;rsquo;ll show you how create a quick GraphQL API using &lt;a class="link" href="https://hasura.io/" target="_blank" rel="noopener"
>Hasura&lt;/a>&lt;/p>
&lt;p>You can find all my work on my Github : &lt;a class="link" href="https://github.com/IDerr/Openfoodfacts" target="_blank" rel="noopener"
>https://github.com/IDerr/Openfoodfacts&lt;/a>&lt;/p>
&lt;h2 id="what-is-hasura">What is Hasura&lt;/h2>
&lt;p>Hasura is a GraphQL engine that can be connected to your database and result in a unified data access layer, here GraphQL.&lt;/p>
&lt;p>If you&amp;rsquo;re interested by the project, you can find a lot more informations on their website !&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>Installation of hasura is pretty straight forward, I&amp;rsquo;ll use Docker-compose to simplify this process.&lt;/p>
&lt;p>Here&amp;rsquo;s the docker-compose I&amp;rsquo;ve used to create my hasura engine&lt;/p>
&lt;pre tabindex="0">&lt;code>version: &amp;#39;3.6&amp;#39;
services:
graphql-engine:
image: hasura/graphql-engine:v2.0.10
ports:
- 8080:8080
restart: always
environment:
## postgres database to store Hasura metadata
HASURA_GRAPHQL_METADATA_DATABASE_URL: postgresql://username:password@hostname:5432/mymetadatadatabase
## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
PG_DATABASE_URL: postgresql://username:password@hostname:5432/openfoodfacts
## enable the console served by server
HASURA_GRAPHQL_ENABLE_CONSOLE: &amp;#34;true&amp;#34; # set to &amp;#34;false&amp;#34; to disable console
## enable debugging mode. It is recommended to disable this in production
HASURA_GRAPHQL_DEV_MODE: &amp;#34;true&amp;#34;
HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
## uncomment next line to set an admin secret
# HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
&lt;/code>&lt;/pre>&lt;p>Now you run the tool easily with&lt;/p>
&lt;pre tabindex="0">&lt;code>docker-compose up -d
&lt;/code>&lt;/pre>&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 387;
flex-basis: 930px"
>
&lt;a href="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/1.jpg" data-size="2544x656">
&lt;img src="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/1.jpg"
width="2544"
height="656"
srcset="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/1_huc88db7e36b75f505937344579e37d924_155988_480x0_resize_q75_box.jpg 480w, https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/1_huc88db7e36b75f505937344579e37d924_155988_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="1.jpg">
&lt;/a>
&lt;figcaption>1.jpg&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>TADAA, you know have a hasura engine ready, just type &lt;code> http://youhostname:8080/console&lt;/code>
You&amp;rsquo;ll be welcomed with a super UI.&lt;/p>
&lt;p>You can now go to the &amp;ldquo;Data&amp;rdquo; section where you can setup the relationship between your database and Hasura.&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 73;
flex-basis: 176px"
>
&lt;a href="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/2.jpg" data-size="876x1189">
&lt;img src="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/2.jpg"
width="876"
height="1189"
srcset="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/2_hu4052cdfc130d7e3aac07c786d212cc93_98152_480x0_resize_q75_box.jpg 480w, https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/2_hu4052cdfc130d7e3aac07c786d212cc93_98152_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="2.jpg">
&lt;/a>
&lt;figcaption>2.jpg&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Just track everything to link all tables !&lt;/p>
&lt;p>Then it&amp;rsquo;ll automatically detect all the links between tables, track them also.&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 84;
flex-basis: 203px"
>
&lt;a href="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/3.jpg" data-size="636x749">
&lt;img src="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/3.jpg"
width="636"
height="749"
srcset="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/3_hu66674bae8d0734084fd7dfcb22298bd5_155404_480x0_resize_q75_box.jpg 480w, https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/3_hu66674bae8d0734084fd7dfcb22298bd5_155404_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="3.jpg">
&lt;/a>
&lt;figcaption>3.jpg&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>After that, you can come back in the &amp;ldquo;API&amp;rdquo; section and your API is ready !&lt;/p>
&lt;p>We can now easily create our GraphQL requests, for example all products that doesn&amp;rsquo;t have a creator&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-graphql" data-lang="graphql">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">query&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">GetProductsWithoutCreator&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">Product&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="py">where&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nc">creator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nc">_is_null&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">true&lt;/span>&lt;span class="p">}}){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">code&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">creator&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">product_name&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 283;
flex-basis: 679px"
>
&lt;a href="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/4.jpg" data-size="1821x643">
&lt;img src="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/4.jpg"
width="1821"
height="643"
srcset="https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/4_huc5951a890f0663c9222f2c1639a69718_89499_480x0_resize_q75_box.jpg 480w, https://iderr.github.io/p/week-2-using-hasura-to-analyze-openfoodfacts/4_huc5951a890f0663c9222f2c1639a69718_89499_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="4.jpg">
&lt;/a>
&lt;figcaption>4.jpg&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Oh, we have found 4 products without any creator, weird&amp;hellip;&lt;/p>
&lt;p>We can now report that to the OpenFood facts team :)&lt;/p>
&lt;p>Analysis can be done very quicky with tools like this, and if we want to build an Android app, our API will be ready to go !&lt;/p>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>Next steps, develop more GraphQL queries to find inconsistent data &amp;amp; improve the data model.
I&amp;rsquo;ll focus on that now !&lt;/p>
&lt;p>Also, that we have our API, we can try to make a simple app to try the integration with Hasura.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>I&amp;rsquo;ll continue working on my side, if anyone would like to help me on this project, feel free to create issues and PR on the github repository.
I am also available on Openfoodfacts Slack (IDerr), if there&amp;rsquo;s any questions!&lt;/p>
&lt;p>See you next week for the next article (on OpenFoodFacts)!&lt;/p></description></item><item><title>Week 1 - New project on OpenFoodFacts</title><link>https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/</link><pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate><guid>https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/</guid><description>&lt;img src="https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/background.png" alt="Featured image of post Week 1 - New project on OpenFoodFacts" />&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Today we will discuss how to import OpenFoodFacts data from their CSV to a PostgreSQL Database.&lt;/p>
&lt;p>I wanted to work on OpenFoodFacts data, but never found MongoDB really great to work with, so I decided to migrate the CSV Data to Postgres, and clean the database (and give back a bit to this awesome community)&lt;/p>
&lt;p>You can find all my work on my Github : &lt;a class="link" href="https://github.com/IDerr/Openfoodfacts" target="_blank" rel="noopener"
>https://github.com/IDerr/Openfoodfacts&lt;/a>&lt;/p>
&lt;h2 id="how-to-download-openfoodfacts-data">How to download OpenFoodFacts data&lt;/h2>
&lt;p>OpenFoodFacts provides all their data for free on their website, with three different formats: Json (based on their mongodb database), CSV and RDF
You can download al the data on their website: &lt;a class="link" href="https://openfoodfacts.org/data" target="_blank" rel="noopener"
>https://openfoodfacts.org/data&lt;/a>&lt;/p>
&lt;p>For the sake of simplicity, I&amp;rsquo;ll use the CSV format for my project.&lt;/p>
&lt;h2 id="how-to-import-data-from-the-csv-to-postgresql">How to import data from the CSV to PostgreSQL&lt;/h2>
&lt;p>As I said, I&amp;rsquo;ll store my data on PostgreSQL, I think this is a great way to store linked data like this (A graph database would be a good fit also), it&amp;rsquo;ll enforce that all fields are filled and the schema respected.&lt;/p>
&lt;p>I took the CSV file, checked all the columns available, and went with a simple schema (still can be improved :D).&lt;/p>
&lt;p>I have determined 12 Models (Additives, Allergens, Brand, Category, City, Country, Emb, Label, Package, Product, Store, Trace) and a bunch of Pivot tables for many to many relations.&lt;/p>
&lt;p>To implement models files, I used &lt;a class="link" href="https://www.sqlalchemy.org/" target="_blank" rel="noopener"
>SQLAlchemy&lt;/a> to create my database schema programmatically, so I can reuse those models files if I want to interact with the database.&lt;/p>
&lt;p>A small python script to parse the CSV, remove incorrect data (same barcode on multiple products ?), and create the product with full links, and tada, we have our database with a lot of products!&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 527;
flex-basis: 1267px"
>
&lt;a href="https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/count.jpg" data-size="2323x440">
&lt;img src="https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/count.jpg"
width="2323"
height="440"
srcset="https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/count_huf54a51841fe046b2ee992a9fc8c7f888_65435_480x0_resize_q75_box.jpg 480w, https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/count_huf54a51841fe046b2ee992a9fc8c7f888_65435_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="count">
&lt;/a>
&lt;figcaption>count&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>Now that our database is ready, there is still work that can be done.
The first step I see is cleaning possible errors or inconsistent data.
We have multiple ways to analyse the database to find these errors:&lt;/p>
&lt;ul>
&lt;li>Use the CSV with some Python to detect anomalies (Pandas + some code)&lt;/li>
&lt;li>Use SQL to find anomalies (or again use Pandas with SQL as a backend)&lt;/li>
&lt;/ul>
&lt;p>After that part, we can make an API based on the models we created before, to integrate the database with our applications!&lt;/p>
&lt;p>Finally, finding ways to improve our database, translations, ingredients, score and so on!&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>I&amp;rsquo;ll continue working this project on my side, if anyone would like to help me on this project, feel free to create issues and PR on the github repository.
I am also available on Openfoodfacts Slack (IDerr), if there&amp;rsquo;s any questions!&lt;/p>
&lt;p>If anyone from openfoodfacts is interested on merging the work I am doing on the public database, don&amp;rsquo;t hesitate!
See you next week for the next article (on OpenFoodFacts)!&lt;/p></description></item><item><title>Introduction to Tutor</title><link>https://iderr.github.io/p/introduction-to-tutor/</link><pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate><guid>https://iderr.github.io/p/introduction-to-tutor/</guid><description>&lt;img src="https://iderr.github.io/p/introduction-to-tutor/background.png" alt="Featured image of post Introduction to Tutor" />&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>Today, we will discuss how to use Tutor for deploying OpenEdx.
OpenEdx is a platform used to deploy your courses online, it&amp;rsquo;s an Udemy like but self hosted.&lt;/p>
&lt;p>Tutor is an amazing tool to get it deployed with Docker (or Kubernetes).&lt;/p>
&lt;h1 id="installation">Installation&lt;/h1>
&lt;h2 id="tutor-installation">Tutor installation&lt;/h2>
&lt;p>Installation is really straightforward, a simple binary to download and you&amp;rsquo;re done !&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo curl -L &lt;span class="s2">&amp;#34;https://github.com/overhangio/tutor/releases/download/v12.1.6/tutor-&lt;/span>&lt;span class="k">$(&lt;/span>uname -s&lt;span class="k">)&lt;/span>&lt;span class="s2">_&lt;/span>&lt;span class="k">$(&lt;/span>uname -m&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -o /usr/local/bin/tutor
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo chmod &lt;span class="m">0755&lt;/span> /usr/local/bin/tutor
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Shamefully copied/pasted from the &lt;a class="link" href="https://docs.tutor.overhang.io/install.html" target="_blank" rel="noopener"
>documentation&lt;/a>&lt;/p>
&lt;p>Really simple, no ?&lt;/p>
&lt;h2 id="run-your-environnement">Run your environnement&lt;/h2>
&lt;p>Now that we have Tutor installed in our environnement, we can launch our platform with the following command&lt;/p>
&lt;pre tabindex="0">&lt;code>tutor local quickstart
&lt;/code>&lt;/pre>&lt;p>You&amp;rsquo;ll be asked some questions to change some variables :&lt;/p>
&lt;ul>
&lt;li>Is it a production platform ?&lt;/li>
&lt;li>Our instance name&lt;/li>
&lt;li>Our contact email&lt;/li>
&lt;/ul>
&lt;p>For this tutorial, I&amp;rsquo;ll run a non production openedx.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">iderr@iderr-VirtualBox:~$ tutor &lt;span class="nb">local&lt;/span> &lt;span class="nv">quickstart&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Interactive platform &lt;span class="nv">configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Are you configuring a production platform? Type &lt;span class="s1">&amp;#39;n&amp;#39;&lt;/span> &lt;span class="k">if&lt;/span> you are just testing Tutor on your &lt;span class="nb">local&lt;/span> computer &lt;span class="o">[&lt;/span>Y/n&lt;span class="o">]&lt;/span> n
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">As you are not running this platform in production, we automatically &lt;span class="nb">set&lt;/span> the following configuration values:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">LMS_HOST&lt;/span> &lt;span class="o">=&lt;/span> local.overhang.io
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">CMS_HOST&lt;/span> &lt;span class="o">=&lt;/span> studio.local.overhang.io
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">ENABLE_HTTPS&lt;/span> &lt;span class="o">=&lt;/span> False
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your platform name/title &lt;span class="o">[&lt;/span>My Open edX&lt;span class="o">]&lt;/span> platform1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your public contact email address &lt;span class="o">[&lt;/span>contact@local.overhang.io&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The default language code &lt;span class="k">for&lt;/span> the platform &lt;span class="o">[&lt;/span>en&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Configuration saved to /home/iderr/.local/share/tutor/config.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Environment generated in /home/iderr/.local/share/tutor/env
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We let tutor do its job, and your environnement will be ready after seeing a text message like this&lt;/p>
&lt;pre tabindex="0">&lt;code>All services initialised.
The Open edX platform is now running in detached mode
Your Open edX platform is ready and can be accessed at the following urls:
http://local.overhang.io
http://studio.local.overhang.io
&lt;/code>&lt;/pre>&lt;p>For our test, I&amp;rsquo;ll stick with defaults urls, of course, you can use yours.
I&amp;rsquo;ll modify my /etc/hosts file to redirect urls in my localhost environnement&lt;/p>
&lt;pre tabindex="0">&lt;code>127.0.0.1 localhost local.overhang.io studio.local.overhang.io
&lt;/code>&lt;/pre>&lt;p>TADA
&lt;figure
class="gallery-image"
style="
flex-grow: 349;
flex-basis: 838px"
>
&lt;a href="https://iderr.github.io/p/introduction-to-tutor/success.jpg" data-size="2474x708">
&lt;img src="https://iderr.github.io/p/introduction-to-tutor/success.jpg"
width="2474"
height="708"
srcset="https://iderr.github.io/p/introduction-to-tutor/success_hub3cb6694bc50bce44bf9d046a2c7491f_113135_480x0_resize_q75_box.jpg 480w, https://iderr.github.io/p/introduction-to-tutor/success_hub3cb6694bc50bce44bf9d046a2c7491f_113135_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="Success">
&lt;/a>
&lt;figcaption>Success&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Congratulations, now, we have a running OpenEdx installation !
See you next time for the configuration of OpenEdx and its customisation !&lt;/p></description></item><item><title>OVH provider for cert-manager DNS-01</title><link>https://iderr.github.io/p/ovh-provider-for-cert-manager-dns-01/</link><pubDate>Fri, 27 Aug 2021 00:00:00 +0000</pubDate><guid>https://iderr.github.io/p/ovh-provider-for-cert-manager-dns-01/</guid><description>&lt;img src="https://cdna.artstation.com/p/assets/images/images/009/211/358/large/bala-vidhya-sagar-1.jpg?1517728575" alt="Featured image of post OVH provider for cert-manager DNS-01" />&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>First article of this new blog!&lt;/p>
&lt;p>Today we will discuss how to configure automatic Let’s-Encrypt certificate renewal with a domain hosted in OVH.&lt;/p>
&lt;p>I have not found a clear tutorial on how to setup a cluster wide OVH cert-manager provider so there it is.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;h3 id="cert-manager-installation">Cert-manager installation&lt;/h3>
&lt;p>Quick reminder, installing cert-manager is pretty straightforward with Helm.
Don&amp;rsquo;t forget to replace the version with the latest one : &lt;a class="link" href="https://github.com/jetstack/cert-manager/releases" target="_blank" rel="noopener"
>https://github.com/jetstack/cert-manager/releases&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create namespace cert-manager
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm repo add jetstack https://charts.jetstack.io
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm repo update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.5.3 --set &lt;span class="nv">installCRDs&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After that, you should have a running cert-manager.&lt;/p>
&lt;h3 id="ovh-webhook-installation">OVH Webhook installation&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/baarde/cert-manager-webhook-ovh.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> cert-manager-webhook-ovh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm install cert-manager-webhook-ovh ./deploy/cert-manager-webhook-ovh --set &lt;span class="nv">groupName&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;GROUP_NAME&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After that, we need to create our api keys in the OVH API to connect our webhook controller to OVH&lt;/p>
&lt;ul>
&lt;li>Go to &lt;a class="link" href="https://api.ovh.com/createToken/index.cgi" target="_blank" rel="noopener"
>https://api.ovh.com/createToken/index.cgi&lt;/a>&lt;/li>
&lt;li>Add the followings rights, if you want to give acces to all of your domains
&lt;ul>
&lt;li>GET /domain/zone/*&lt;/li>
&lt;li>PUT /domain/zone/*&lt;/li>
&lt;li>POST /domain/zone/*&lt;/li>
&lt;li>DELETE /domain/zone/*&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>If you prefer to give access only to one domain replace the &amp;ldquo;*&amp;rdquo; by your domain name&lt;/li>
&lt;/ul>
&lt;p>We will store the freshly generated application secret in Kubernetes.&lt;/p>
&lt;p>The secret needs to be in the same namespace as the cert-manager controller pod if you want to create a ClusterIssuer, in our case, &amp;lsquo;cert-manager&amp;rsquo;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create secret generic ovh-credentials --namespace cert-manager --from-literal&lt;span class="o">=&lt;/span>&lt;span class="nv">applicationSecret&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;OVHSECRET&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Grant permission to get the secret to the cert-manager-webhook-ovh service account&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterRole&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager-webhook-ovh:secret-reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">apiGroups&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">resources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;secrets&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">resourceNames&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;ovh-credentials&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">verbs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;watch&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterRoleBinding&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager-webhook-ovh:secret-reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">roleRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">apiGroup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterRole&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager-webhook-ovh:secret-reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">subjects&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">apiGroup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">default&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ServiceAccount&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager-webhook-ovh&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we can finally create our cluster issuer, don&amp;rsquo;t forget to replace the values between &amp;lt;&amp;gt; with your keys/config&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager.io/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterIssuer&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">letsencrypt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">acme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://acme-v02.api.letsencrypt.org/directory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">email&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;EMAIL&amp;gt;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">privateKeySecretRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">letsencrypt-account-key&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">solvers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">dns01&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">webhook&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">groupName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;GROUP_NAME&amp;gt;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">solverName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ovh&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">config&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">endpoint&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ovh-eu&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">applicationKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;APP_KEY&amp;gt;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">applicationSecretRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">applicationSecret&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ovh-credentials&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">consumerKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;CONSUMER_KEY&amp;gt;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And voila, you have a fully working ClusterIssuer with OVH, you can test all your work with a new Certificate.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager.io/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Certificate&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">example-certificate&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dnsNames&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">test.mydomain.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">issuerRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">letsencrypt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterIssuer&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">secretName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test-mydomain-com-tls&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">NAME READY SECRET AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">example-certificate True test-mydomain-com-tls 3s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Congratulations, and see you next time for another article!&lt;/p></description></item></channel></rss>