<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IDerr</title><link>https://iderr.github.io/</link><description>Recent content on IDerr</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 14 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://iderr.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Week 1 - New project on OpenFoodFacts</title><link>https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/</link><pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate><guid>https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/</guid><description>&lt;img src="https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/background.png" alt="Featured image of post Week 1 - New project on OpenFoodFacts" />&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Today we will discuss how to import OpenFoodFacts data from their CSV to a PostgreSQL Database.&lt;/p>
&lt;p>I wanted to work on OpenFoodFacts data, but never found MongoDB really great to work with, so I decided to migrate the CSV Data to Postgres, and clean the database (and give back a bit to this awesome community)&lt;/p>
&lt;p>You can find all my work on my Github : &lt;a class="link" href="https://github.com/IDerr/Openfoodfacts" target="_blank" rel="noopener"
>https://github.com/IDerr/Openfoodfacts&lt;/a>&lt;/p>
&lt;h2 id="how-to-download-openfoodfacts-data">How to download OpenFoodFacts data&lt;/h2>
&lt;p>OpenFoodFacts provides all their data for free on their website, with three different formats: Json (based on their mongodb database), CSV and RDF
You can download al the data on their website: &lt;a class="link" href="https://openfoodfacts.org/data" target="_blank" rel="noopener"
>https://openfoodfacts.org/data&lt;/a>&lt;/p>
&lt;p>For the sake of simplicity, I&amp;rsquo;ll use the CSV format for my project.&lt;/p>
&lt;h2 id="how-to-import-data-from-the-csv-to-postgresql">How to import data from the CSV to PostgreSQL&lt;/h2>
&lt;p>As I said, I&amp;rsquo;ll store my data on PostgreSQL, I think this is a great way to store linked data like this (A graph database would be a good fit also), it&amp;rsquo;ll enforce that all fields are filled and the schema respected.&lt;/p>
&lt;p>I took the CSV file, checked all the columns available, and went with a simple schema (still can be improved :D).&lt;/p>
&lt;p>I have determined 12 Models (Additives, Allergens, Brand, Category, City, Country, Emb, Label, Package, Product, Store, Trace) and a bunch of Pivot tables for many to many relations.&lt;/p>
&lt;p>To implement models files, I used &lt;a class="link" href="https://www.sqlalchemy.org/" target="_blank" rel="noopener"
>SQLAlchemy&lt;/a> to create my database schema programmatically, so I can reuse those models files if I want to interact with the database.&lt;/p>
&lt;p>A small python script to parse the CSV, remove incorrect data (same barcode on multiple products ?), and create the product with full links, and tada, we have our database with a lot of products!&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 527;
flex-basis: 1267px"
>
&lt;a href="https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/count.jpg" data-size="2323x440">
&lt;img src="https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/count.jpg"
width="2323"
height="440"
srcset="https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/count_huf54a51841fe046b2ee992a9fc8c7f888_65435_480x0_resize_q75_box.jpg 480w, https://iderr.github.io/p/week-1-new-project-on-openfoodfacts/count_huf54a51841fe046b2ee992a9fc8c7f888_65435_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="count">
&lt;/a>
&lt;figcaption>count&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>Now that our database is ready, there is still work that can be done.
The fist step I see is cleaning possible errors or inconsistent data.
We have multiple ways to analyse the database to find these errors:&lt;/p>
&lt;ul>
&lt;li>Use the CSV with some Python to detect anomalies (Pandas + some code)&lt;/li>
&lt;li>Use SQL to find anomalies (or again use Pandas with SQL as a backend)&lt;/li>
&lt;/ul>
&lt;p>After that part, we can make an API based on the models we created before, to integrate the database with our applications!&lt;/p>
&lt;p>Finally, finding ways to improve our database, translations, ingredients, score and so on!&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>I&amp;rsquo;ll continue working this project on my side, if anyone would like to help me on this project, feel free to create issues and PR on the github repository.
I am also available on Openfoodfacts Slack (IDerr), if there&amp;rsquo;s any questions!&lt;/p>
&lt;p>If anyone from openfoodfacts is interested on merging the work I am doing on the public database, don&amp;rsquo;t hesitate!
See you next week for the next article (on OpenFoodFacts)!&lt;/p></description></item><item><title>Introduction to Tutor</title><link>https://iderr.github.io/p/introduction-to-tutor/</link><pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate><guid>https://iderr.github.io/p/introduction-to-tutor/</guid><description>&lt;img src="https://iderr.github.io/p/introduction-to-tutor/background.png" alt="Featured image of post Introduction to Tutor" />&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>Today, we will discuss how to use Tutor for deploying OpenEdx.
OpenEdx is a platform used to deploy your courses online, it&amp;rsquo;s an Udemy like but self hosted.&lt;/p>
&lt;p>Tutor is an amazing tool to get it deployed with Docker (or Kubernetes).&lt;/p>
&lt;h1 id="installation">Installation&lt;/h1>
&lt;h2 id="tutor-installation">Tutor installation&lt;/h2>
&lt;p>Installation is really straightforward, a simple binary to download and you&amp;rsquo;re done !&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo curl -L &lt;span class="s2">&amp;#34;https://github.com/overhangio/tutor/releases/download/v12.1.6/tutor-&lt;/span>&lt;span class="k">$(&lt;/span>uname -s&lt;span class="k">)&lt;/span>&lt;span class="s2">_&lt;/span>&lt;span class="k">$(&lt;/span>uname -m&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -o /usr/local/bin/tutor
sudo chmod &lt;span class="m">0755&lt;/span> /usr/local/bin/tutor
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Shamefully copied/pasted from the &lt;a class="link" href="https://docs.tutor.overhang.io/install.html" target="_blank" rel="noopener"
>documentation&lt;/a>&lt;/p>
&lt;p>Really simple, no ?&lt;/p>
&lt;h2 id="run-your-environnement">Run your environnement&lt;/h2>
&lt;p>Now that we have Tutor installed in our environnement, we can launch our platform with the following command&lt;/p>
&lt;pre tabindex="0">&lt;code>tutor local quickstart
&lt;/code>&lt;/pre>&lt;p>You&amp;rsquo;ll be asked some questions to change some variables :&lt;/p>
&lt;ul>
&lt;li>Is it a production platform ?&lt;/li>
&lt;li>Our instance name&lt;/li>
&lt;li>Our contact email&lt;/li>
&lt;/ul>
&lt;p>For this tutorial, I&amp;rsquo;ll run a non production openedx.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">iderr@iderr-VirtualBox:~$ tutor &lt;span class="nb">local&lt;/span> &lt;span class="nv">quickstart&lt;/span>
&lt;span class="o">==================================================&lt;/span>
Interactive platform &lt;span class="nv">configuration&lt;/span>
&lt;span class="o">==================================================&lt;/span>
Are you configuring a production platform? Type &lt;span class="s1">&amp;#39;n&amp;#39;&lt;/span> &lt;span class="k">if&lt;/span> you are just testing Tutor on your &lt;span class="nb">local&lt;/span> computer &lt;span class="o">[&lt;/span>Y/n&lt;span class="o">]&lt;/span> n
As you are not running this platform in production, we automatically &lt;span class="nb">set&lt;/span> the following configuration values:
&lt;span class="nv">LMS_HOST&lt;/span> &lt;span class="o">=&lt;/span> local.overhang.io
&lt;span class="nv">CMS_HOST&lt;/span> &lt;span class="o">=&lt;/span> studio.local.overhang.io
&lt;span class="nv">ENABLE_HTTPS&lt;/span> &lt;span class="o">=&lt;/span> False
Your platform name/title &lt;span class="o">[&lt;/span>My Open edX&lt;span class="o">]&lt;/span> platform1
Your public contact email address &lt;span class="o">[&lt;/span>contact@local.overhang.io&lt;span class="o">]&lt;/span>
The default language code &lt;span class="k">for&lt;/span> the platform &lt;span class="o">[&lt;/span>en&lt;span class="o">]&lt;/span>
Configuration saved to /home/iderr/.local/share/tutor/config.yml
Environment generated in /home/iderr/.local/share/tutor/env
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We let tutor do its job, and your environnement will be ready after seeing a text message like this&lt;/p>
&lt;pre tabindex="0">&lt;code>All services initialised.
The Open edX platform is now running in detached mode
Your Open edX platform is ready and can be accessed at the following urls:
http://local.overhang.io
http://studio.local.overhang.io
&lt;/code>&lt;/pre>&lt;p>For our test, I&amp;rsquo;ll stick with defaults urls, of course, you can use yours.
I&amp;rsquo;ll modify my /etc/hosts file to redirect urls in my localhost environnement&lt;/p>
&lt;pre tabindex="0">&lt;code>127.0.0.1 localhost local.overhang.io studio.local.overhang.io
&lt;/code>&lt;/pre>&lt;p>TADA
&lt;figure
class="gallery-image"
style="
flex-grow: 349;
flex-basis: 838px"
>
&lt;a href="https://iderr.github.io/p/introduction-to-tutor/success.jpg" data-size="2474x708">
&lt;img src="https://iderr.github.io/p/introduction-to-tutor/success.jpg"
width="2474"
height="708"
srcset="https://iderr.github.io/p/introduction-to-tutor/success_hub3cb6694bc50bce44bf9d046a2c7491f_113135_480x0_resize_q75_box.jpg 480w, https://iderr.github.io/p/introduction-to-tutor/success_hub3cb6694bc50bce44bf9d046a2c7491f_113135_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="Success">
&lt;/a>
&lt;figcaption>Success&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Congratulations, now, we have a running OpenEdx installation !
See you next time for the configuration of OpenEdx and its customisation !&lt;/p></description></item><item><title>OVH provider for cert-manager DNS-01</title><link>https://iderr.github.io/p/ovh-provider-for-cert-manager-dns-01/</link><pubDate>Fri, 27 Aug 2021 00:00:00 +0000</pubDate><guid>https://iderr.github.io/p/ovh-provider-for-cert-manager-dns-01/</guid><description>&lt;img src="https://cdna.artstation.com/p/assets/images/images/009/211/358/large/bala-vidhya-sagar-1.jpg?1517728575" alt="Featured image of post OVH provider for cert-manager DNS-01" />&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>First article of this new blog!&lt;/p>
&lt;p>Today we will discuss how to configure automatic Let’s-Encrypt certificate renewal with a domain hosted in OVH.&lt;/p>
&lt;p>I have not found a clear tutorial on how to setup a cluster wide OVH cert-manager provider so there it is.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;h3 id="cert-manager-installation">Cert-manager installation&lt;/h3>
&lt;p>Quick reminder, installing cert-manager is pretty straightforward with Helm.
Don&amp;rsquo;t forget to replace the version with the latest one : &lt;a class="link" href="https://github.com/jetstack/cert-manager/releases" target="_blank" rel="noopener"
>https://github.com/jetstack/cert-manager/releases&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">kubectl create namespace cert-manager
helm repo add jetstack https://charts.jetstack.io
helm repo update
helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.5.3 --set &lt;span class="nv">installCRDs&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>After that, you should have a running cert-manager.&lt;/p>
&lt;h3 id="ovh-webhook-installation">OVH Webhook installation&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">git clone https://github.com/baarde/cert-manager-webhook-ovh.git
&lt;span class="nb">cd&lt;/span> cert-manager-webhook-ovh
helm install cert-manager-webhook-ovh ./deploy/cert-manager-webhook-ovh --set &lt;span class="nv">groupName&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;GROUP_NAME&amp;gt;&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>After that, we need to create our api keys in the OVH API to connect our webhook controller to OVH&lt;/p>
&lt;ul>
&lt;li>Go to &lt;a class="link" href="https://api.ovh.com/createToken/index.cgi" target="_blank" rel="noopener"
>https://api.ovh.com/createToken/index.cgi&lt;/a>&lt;/li>
&lt;li>Add the followings rights, if you want to give acces to all of your domains
&lt;ul>
&lt;li>GET /domain/zone/*&lt;/li>
&lt;li>PUT /domain/zone/*&lt;/li>
&lt;li>POST /domain/zone/*&lt;/li>
&lt;li>DELETE /domain/zone/*&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>If you prefer to give access only to one domain replace the &amp;ldquo;*&amp;rdquo; by your domain name&lt;/li>
&lt;/ul>
&lt;p>We will store the freshly generated application secret in Kubernetes.&lt;/p>
&lt;p>The secret needs to be in the same namespace as the cert-manager controller pod if you want to create a ClusterIssuer, in our case, &amp;lsquo;cert-manager&amp;rsquo;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">kubectl create secret generic ovh-credentials --namespace cert-manager --from-literal&lt;span class="o">=&lt;/span>&lt;span class="nv">applicationSecret&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;OVHSECRET&amp;gt;&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Grant permission to get the secret to the cert-manager-webhook-ovh service account&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterRole&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager-webhook-ovh:secret-reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="nt">apiGroups&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">resources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;secrets&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">resourceNames&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;ovh-credentials&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">verbs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;watch&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterRoleBinding&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager-webhook-ovh:secret-reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">roleRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">apiGroup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterRole&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager-webhook-ovh:secret-reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">subjects&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="nt">apiGroup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">default&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ServiceAccount&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager-webhook-ovh&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we can finally create our cluster issuer, don&amp;rsquo;t forget to replace the values between &amp;lt;&amp;gt; with your keys/config&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager.io/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterIssuer&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">letsencrypt&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">acme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://acme-v02.api.letsencrypt.org/directory&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">email&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;EMAIL&amp;gt;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">privateKeySecretRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">letsencrypt-account-key&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">solvers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">dns01&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">webhook&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">groupName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;GROUP_NAME&amp;gt;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">solverName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ovh&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">config&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">endpoint&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ovh-eu&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">applicationKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;APP_KEY&amp;gt;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">applicationSecretRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">applicationSecret&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ovh-credentials&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">consumerKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;CONSUMER_KEY&amp;gt;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And voila, you have a fully working ClusterIssuer with OVH, you can test all your work with a new Certificate.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cert-manager.io/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Certificate&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">example-certificate&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">dnsNames&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">test.mydomain.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">issuerRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">letsencrypt&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterIssuer&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">secretName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test-mydomain-com-tls&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">NAME READY SECRET AGE
example-certificate True test-mydomain-com-tls 3s
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Congratulations, and see you next time for another article!&lt;/p></description></item></channel></rss>